version: "3.3"

services:
  db:
    image: postgres:15
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - compose.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "127.0.0.1:5432:5432"

  backend:
    depends_on:
      - db
      - elasticsearch
    env_file:
      - .env
    environment:
      - SERVER_HOST=https://127.0.0.1
      - POSTGRES_SERVER=db:5432
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    build:
      context: .
    ports:
      - "8000:80"

  celery:
    build:
      context: .
    command: /bin/sh -c "celery -A app.tasks.main worker --loglevel=DEBUG"
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db:5432
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis

  redis:
    image: redis:latest
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  elasticsearch:
    image: elasticsearch:8.7.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "127.0.0.1:9200:9200"


  kibana:
    image: kibana:8.7.1
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"


volumes:
  app-db-data:
  elasticsearch-data:
